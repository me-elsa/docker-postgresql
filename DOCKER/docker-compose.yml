
# services:
#   frontend:
#     build:
#       context: ./frontend
#     ports:
#       - "3006:3006"
#     depends_on:
#       - backend

#   backend:
#     build:
#       context: ./backend 
#     ports: 
#      - "5000:5000" 
#     environment: 
#      - DATABASE_URL=postgresql://postgres:03017158007@docker-postgres-1:5432/postgres

#     depends_on: 
#     - docker-postgres-1
  
  
#   docker-postgres-1:
#     image: postgres:14-alpine
#     ports:
#       - "5432:5432"
#     environment:
#       POSTGRES_USER: postgres
#       POSTGRES_PASSWORD: 03017158007
#       POSTGRES_DB: postgres
#     volumes:
#       - postgres_data:/var/lib/postgresql/data

# volumes:
#   postgres_data:

services:
  frontend:
    build: ./frontend
    ports:
      - "3006:3006"
    volumes:
      - ./frontend/src:/app/src
    stdin_open: true
    tty: true
    command: npm start
    depends_on:
      - backend
  # 172.18.0.2
  backend:
    build: ./backend
    ports:
      - "5000:5000"
    volumes:
      - logs:/app/logs
      - ./backend:/app
      - /app/node_modules
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "03017158007"
      POSTGRES_DB: "postgres"
      POSTGRES_HOST: "docker-postgres-1"
      POSTGRES_PORT: 5432

    depends_on:
      - postgres

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "03017158007"
      POSTGRES_DB: "crudapp"
    ports:
      - "5432:5432"
    volumes:
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql

volumes:
  logs:


